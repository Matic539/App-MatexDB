{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Matex AdminDB","text":"<p>Matex AdminDB es una aplicaci\u00f3n de escritorio escrita en Python + Tkinter que permite a Matex:</p> <ul> <li>Registrar ventas \ud83d\udcb8 (m\u00faltiples formas de pago)</li> <li>Controlar inventario \ud83d\udce6 y precios</li> <li>Generar reportes a Excel \ud83d\udcca</li> <li>Restaurar stock al anular una venta</li> <li>Exportar historial de ventas y filtrarlo por fecha</li> </ul> <p>Estado: Prototipo \u2014 Fase de validaci\u00f3n con el cliente Versi\u00f3n actual: <code>v&lt;0.1.0&gt;</code> (semver)</p>"},{"location":"#demo-rapida","title":"Demo r\u00e1pida","text":"Pesta\u00f1a Descripci\u00f3n Captura Ingreso de Ventas Agrega productos, aplica IVA (19 %) y confirma total antes de guardar. Historial Busca ventas por rango de fechas y exporta a Excel. Inventario Filtra por stock bajo o productos sin precio; CRUD completo."},{"location":"#caracteristicas-clave","title":"Caracter\u00edsticas clave","text":"<p>flowchart LR</p> <ul> <li>GUI[UI Tkinter]</li> <li>SERVICES[[ServicesProducto / Ventas]]</li> <li>REPO[[RepositoriosSQL]]</li> <li>DB[(PostgreSQL)]</li> <li>GUI --&gt; SERVICES</li> <li>SERVICES --&gt; REPO</li> <li>REPO --&gt; DB</li> <li>Type-hints + docstrings y pre-commit con Black, isort, flake8, mypy</li> <li>MkDocs + Material para esta documentaci\u00f3n (CI/CD en GitHub Pages)</li> </ul>"},{"location":"#guia-rapida","title":"Gu\u00eda r\u00e1pida","text":"<pre><code>git clone https://github.com/Matic539/App-MatexDB.git\ncd App-MatexDB\npython -m venv venv       # crea entorno\nsource venv/bin/activate  # .\\venv\\Scripts\\activate en Windows\npip install -r requirements.txt\ncp .env.example .env      # ajusta credenciales PostgreSQL\npython -m app.main        # \u00a1listo!\n</code></pre> <p>(Si necesitas m\u00e1s detalles, consulta la secci\u00f3n Instalaci\u00f3n.)</p>"},{"location":"#creditos","title":"Cr\u00e9ditos","text":"<p>Proyecto creado por Mat\u00edas L\u00f3pez \u2022 2025</p>"},{"location":"ER_analysis/","title":"An\u00e1lisis del Diagrama ER","text":"<p>Este documento describe la estructura de la base de datos <code>matex_db</code>, incluyendo tablas, columnas, relaciones y restricciones.</p>"},{"location":"ER_analysis/#1-tabla-productos","title":"1. Tabla productos","text":"<ul> <li>Descripci\u00f3n: Almacena la informaci\u00f3n b\u00e1sica de cada producto.</li> <li>Columnas:  </li> <li><code>id_producto</code> (INT): Clave primaria, identificador \u00fanico de producto.  </li> <li><code>nombre</code> (TEXT): Nombre descriptivo del producto.  </li> <li><code>stock</code> (INT): Cantidad disponible en inventario. :contentReference[oaicite:0]{index=0}:contentReference[oaicite:1]{index=1}</li> </ul>"},{"location":"ER_analysis/#2-tabla-precios","title":"2. Tabla precios","text":"<ul> <li>Descripci\u00f3n: Contiene los datos de precios asociados a productos.</li> <li>Columnas:  </li> <li><code>id_producto</code> (INT): Clave primaria y for\u00e1nea, referencia a <code>productos.id_producto</code>.  </li> <li><code>precio_neto</code> (NUMERIC): Precio de venta sin impuestos.  </li> <li><code>costo_neto</code> (NUMERIC): Costo neto.  </li> <li><code>utilidad_neta</code> (NUMERIC): Ganancia neta.  </li> <li>Relaci\u00f3n:  </li> <li>1 Producto \u2194 0..1 Precios (un producto puede tener cero o un registro de precio) :contentReference[oaicite:2]{index=2}:contentReference[oaicite:3]{index=3}</li> </ul>"},{"location":"ER_analysis/#3-tabla-ventas","title":"3. Tabla ventas","text":"<ul> <li>Descripci\u00f3n: Registra cada transacci\u00f3n de venta.</li> <li>Columnas:  </li> <li><code>id_venta</code> (INT): Clave primaria de la venta.  </li> <li><code>fecha</code> (DATE): Fecha de realizaci\u00f3n de la venta.  </li> <li><code>forma_pago</code> (TEXT): Medio de pago utilizado.  </li> <li><code>monto_total</code> (NUMERIC): Suma total de la venta.  </li> <li><code>total_productos</code> (INT): N\u00famero de \u00edtems vendidos. :contentReference[oaicite:4]{index=4}:contentReference[oaicite:5]{index=5}</li> </ul>"},{"location":"ER_analysis/#4-tabla-ventas_producto","title":"4. Tabla ventas_producto","text":"<ul> <li>Descripci\u00f3n: Detalle de productos incluidos en cada venta.</li> <li>Columnas:  </li> <li><code>id_venta</code> (INT): Clave for\u00e1nea a <code>ventas.id_venta</code>.  </li> <li><code>id_producto</code> (INT): Clave for\u00e1nea a <code>productos.id_producto</code>.  </li> <li><code>cantidad</code> (INT): Cantidad del producto vendido.  </li> <li><code>monto_producto</code> (NUMERIC): Precio total de ese producto en la venta.  </li> <li>Relaciones:  </li> <li>1 Venta \u2194 * ventas_producto (una venta puede incluir m\u00faltiples productos) :contentReference[oaicite:6]{index=6}:contentReference[oaicite:7]{index=7}  </li> <li>1 Producto \u2194 * ventas_producto (un producto puede aparecer en varias ventas) :contentReference[oaicite:8]{index=8}:contentReference[oaicite:9]{index=9}</li> </ul>"},{"location":"ER_analysis/#5-restricciones-y-claves","title":"5. Restricciones y claves","text":"<ul> <li>Claves primarias (PK):  </li> <li><code>productos.id_producto</code> </li> <li><code>precios.id_producto</code> </li> <li><code>ventas.id_venta</code> </li> <li>Claves for\u00e1neas (FK):  </li> <li><code>precios.id_producto</code> \u2192 <code>productos.id_producto</code> </li> <li><code>ventas_producto.id_venta</code> \u2192 <code>ventas.id_venta</code> </li> <li><code>ventas_producto.id_producto</code> \u2192 <code>productos.id_producto</code></li> </ul>"},{"location":"architecture/","title":"Arquitectura","text":"<p>Matex AdminDB est\u00e1 organizada en 4 capas bien separadas:</p>"},{"location":"architecture/#diagrama-de-capas-mermaid","title":"Diagrama de capas (Mermaid)","text":"<ul> <li>UI (presentaci\u00f3n):  Tkinter muestra pesta\u00f1as y cuadros de di\u00e1logo; no contiene l\u00f3gica de BD.</li> <li>Services (negocio):  Validan reglas simples (stock disponible, totales con IVA) y orquestan varias llamadas a repos.</li> <li>Repositories (persistencia):  Sentencias SQL directas usando psycopg2; sin reglas de negocio.</li> <li>PostgreSQL:  Esquema en db/schema.sql (ver m\u00e1s abajo).</li> </ul>"},{"location":"architecture/#diagrama-simplificado-de-clases-con-mermaid","title":"Diagrama simplificado de clases con Mermaid","text":""},{"location":"architecture/#flujos-de-datos","title":"Flujos de datos","text":"Paso Acci\u00f3n Origen \u2192 Destino 1 Usuario ingresa venta y pulsa Confirmar <code>IngresoTab</code> \u2192 <code>VentasService.preparar_items_venta()</code> 2 Service valida stock y calcula IVA <code>VentasService</code> 3 Usuario pulsa Guardar venta <code>VentasService.crear_venta()</code> \u2192 <code>ventas_repo.insertar_venta()</code> + <code>producto_repo.descontar_stock()</code> 4 BD actualiza tablas <code>ventas</code>, <code>ventas_producto</code>, <code>productos</code> Repositorios \u2192 PostgreSQL 5 UI refresca tablas <code>IngresoTab</code> llama a <code>InventarioTab._update_table()</code>"},{"location":"architecture/#modulos-y-responsabilidades","title":"M\u00f3dulos y responsabilidades","text":"M\u00f3dulo Descripci\u00f3n Tests (fase 3) <code>ui/</code> Componentes Tkinter; sin SQL Tests de integraci\u00f3n con <code>pytest-qt</code> <code>services/producto_service.py</code> Reglas de stock y exportaci\u00f3n Unit tests con mocks <code>services/ventas_service.py</code> Transacciones de ventas; maneja stock y calculo de totales Unit + integration <code>repository/*_repo.py</code> CRUD SQL puro Tests con DB en contenedor <code>repository/db.py</code> Pool de conexiones (psycopg2) Mock/stub en unit tests"},{"location":"architecture/#esquema-de-base-de-datos","title":"Esquema de base de datos","text":"<pre><code>db/schema.sql\n</code></pre> <p>El script idempotente se mantiene ahi</p>"},{"location":"install/","title":"Instalaci\u00f3n","text":"<p>Tiempo estimado: 5 \u2013 10 min Funciona en Windows, macOS y Linux. Solo necesitas Python \u2265 3.11 y una instancia local de PostgreSQL (o remota si ya la tienes).</p>"},{"location":"install/#1-requisitos","title":"1. Requisitos","text":"Software Versi\u00f3n m\u00ednima Comprobaci\u00f3n Python 3.11 <code>python --version</code> pip 23 <code>pip --version</code> Git 2.30 <code>git --version</code> PostgreSQL 13 <code>psql --version</code> <p>En Windows puedes instalar Python desde https://www.python.org/ y PostgreSQL con https://www.postgresql.org/download/. Aseg\u00farate de marcar \u201cAdd Python to PATH\u201d y anotar la contrase\u00f1a de <code>postgres</code> durante la instalaci\u00f3n de Postgres.</p>"},{"location":"install/#2-clona-el-repositorio","title":"2. Clona el repositorio","text":"<pre><code>git clone https://github.com/Matic539/App-MatexDB.git\ncd App-MatexDB\n</code></pre>"},{"location":"install/#3-crea-y-activa-un-entorno-virtual","title":"3. Crea y activa un entorno virtual","text":"<pre><code># Windows PowerShell\npython -m venv venv\n.\\venv\\Scripts\\activate\n\n# macOS / Linux\npython3 -m venv venv\nsource venv/bin/activate\n</code></pre> <p>Ver\u00e1s el prefijo (venv) en la consola. Para salir del entorno m\u00e1s tarde: deactivate.</p>"},{"location":"install/#4-instala-dependencias","title":"4. Instala dependencias","text":"<p><pre><code>pip install -r requirements.txt\n</code></pre> Si vas a trabajar en el c\u00f3digo (hooks, docs, tests): <pre><code>pip install -r requirements-dev.txt\npre-commit install   # activa los hooks de calidad\n</code></pre></p>"},{"location":"install/#5-copia-y-edita-el-archivo-env","title":"5. Copia y edita el archivo .env","text":"<p><pre><code>cp .env.example .env\n</code></pre> Abre .env y ajusta si es necesario: <pre><code>DB_NAME=matex_db\nDB_USER=postgres\nDB_PASSWORD=postgres   # \u2190 tu contrase\u00f1a\nDB_HOST=localhost\nDB_PORT=5432\n</code></pre></p>"},{"location":"install/#6-prepara-la-base-de-datos","title":"6. Prepara la base de datos","text":"<ol> <li>Crea la BD y las tablas: (En la carpeta db/ se encuentra el schema.sql de la database.)</li> </ol>"},{"location":"install/#7-lanza-la-aplicacion","title":"7. Lanza la aplicaci\u00f3n","text":"<pre><code>python -m app.main\n</code></pre> <p>La ventana Matex vX.Y.Z \u2014 Administrador de Ventas deber\u00eda abrirse sin errores.</p>"},{"location":"install/#8-actualizar-dependencias","title":"8. Actualizar dependencias","text":"<pre><code>pip list --outdated        # muestra paquetes\npip install -U &lt;paquete&gt;   # actualiza uno\n</code></pre>"},{"location":"install/#9-desinstalar-limpiar","title":"9. Desinstalar / limpiar","text":"<pre><code>deactivate         # sale del venv\nrm -rf venv        # elimina el entorno virtual\n</code></pre>"},{"location":"usage/","title":"Uso r\u00e1pido","text":"<p>En esta gu\u00eda recorrer\u00e1s el flujo t\u00edpico: registrar una venta, consultar el historial y actualizar inventario. Las capturas corresponden a la versi\u00f3n <code>v0.1.0</code>; tu pantalla puede variar ligeramente.</p>"},{"location":"usage/#1-ingreso-de-ventas","title":"1. Ingreso de Ventas","text":"<p>![Ingreso de Ventas]</p> <ol> <li>Selecciona la fecha (por defecto hoy).  </li> <li>Escoge la forma de pago en el desplegable.  </li> <li>Para cada producto introduce la cantidad vendida. El stock disponible se muestra entre par\u00e9ntesis. </li> <li>Pulsa \ud83d\udd04 si agregaste productos nuevos y quieres refrescar la lista.  </li> <li>Haz clic en Confirmar venta para ver el resumen:  </li> <li>Total de art\u00edculos  </li> <li>Monto con IVA (19 %)  </li> <li>Revisa y, si todo es correcto, pulsa Guardar venta.    Aparecer\u00e1 un mensaje \u2705 y el stock se descuenta autom\u00e1ticamente.</li> </ol>"},{"location":"usage/#2-historial-de-ventas","title":"2. Historial de Ventas","text":"<p>![Historial]</p> <ul> <li>El panel superior permite filtrar por rango de fechas.  </li> <li>Doble clic en cualquier fila para abrir el detalle de productos.  </li> <li>Exportar a Excel genera <code>data/ventas_exportadas.xlsx</code> con todas las columnas.</li> </ul>"},{"location":"usage/#3-control-de-inventario","title":"3. Control de Inventario","text":"<p>![Inventario]</p> Bot\u00f3n Acci\u00f3n Ver todos Lista completa de productos Stock bajo Solo art\u00edculos con \u2264 30 unidades Sin precio Productos sin valor asignado Exportar a Excel Guarda el inventario en <code>data/inventario_exportado.xlsx</code> Agregar Producto Abre ventana para nombre, precio y stock inicial (Doble clic en una fila) Edita precio y stock <p>Para eliminar un producto, selecci\u00f3nalo y pulsa Eliminar Producto.</p>"},{"location":"usage/#4-eliminar-ventas","title":"4. Eliminar Ventas","text":"<p>En la pesta\u00f1a Eliminar Ventas introduce el ID de venta y pulsa Eliminar. El stock de cada producto se restaura autom\u00e1ticamente.</p> <p>![Eliminar]</p>"},{"location":"usage/#5-atajos-de-teclado","title":"5. Atajos de teclado","text":"Acci\u00f3n Tecla Desplazarse por productos Rueda del rat\u00f3n Refrescar lista de productos <code>Ctrl + R</code> (equivale al bot\u00f3n \ud83d\udd04) Cerrar ventana de detalle <code>Esc</code>"},{"location":"usage/#6-directorios-generados","title":"6. Directorios generados","text":"Carpeta / Archivo Contenido <code>data/ventas_exportadas.xlsx</code> Historial exportado <code>data/inventario_exportado.xlsx</code> Inventario exportado <code>logs/</code> (opcional) Registro de errores si habilitas logging <code>.env</code> Variables de conexi\u00f3n a BD"},{"location":"usage/#7-preguntas-frecuentes","title":"7. Preguntas frecuentes","text":"\u00bfPuedo anular solo un producto dentro de una venta?  Por ahora no: debes eliminar la venta completa y volver a ingresarla con los productos corregidos. Esta funcionalidad se a\u00f1adir\u00e1 en futuras versiones.  \u00bfC\u00f3mo imprimo un recibo?  En la versi\u00f3n prototipo no hay impresi\u00f3n directa. Como alternativa exporta a Excel y genera tu formato desde all\u00ed.  <p>Si encuentras alg\u00fan bug o tienes sugerencias, crea un Issue en GitHub o env\u00eda un correo a matias.lopez.renato@gmail.com.</p>"},{"location":"api/repository/","title":"Repositorios","text":"<p>Esta secci\u00f3n documenta la capa de Repositorios (SQL puro) que encapsula los <code>SELECT</code>/<code>INSERT</code>/<code>UPDATE</code>/<code>DELETE</code> contra PostgreSQL.</p>"},{"location":"api/repository/#repositorydb","title":"repository.db","text":"<p>Este m\u00f3dulo gestiona el pool de conexiones y el contexto transaccional:</p> <p>Manejo de conexiones PostgreSQL (capa Repository).</p> <p>Contiene un pool global de conexiones y un context manager <code>get_conn</code> que garantiza commit/rollback y la devoluci\u00f3n segura al pool.</p>"},{"location":"api/repository/#repository.db.get_conn","title":"<code>get_conn()</code>","text":"<p>Context manager que entrega una conexi\u00f3n del pool.</p>"},{"location":"api/repository/#repository.db.init_pool","title":"<code>init_pool(minconn=1, maxconn=10)</code>","text":"<p>Inicializa el pool global de conexiones.</p> <p>Parameters:</p> Name Type Description Default <code>minconn</code> <code>int</code> <p>Conexiones m\u00ednimas a mantener.</p> <code>1</code> <code>maxconn</code> <code>int</code> <p>Conexiones m\u00e1ximas permitidas.</p> <code>10</code> Side effects <p>Crea la variable global <code>_pool</code> si a\u00fan no existe.</p> <p>Raises:</p> Type Description <code>Error</code> <p>Si la conexi\u00f3n a la BD falla.</p>"},{"location":"api/repository/#repositoryproducto_repo","title":"repository.producto_repo","text":"<p>Operaciones CRUD sobre la entidad Producto y su precio.</p> <p>Operaciones CRUD sobre productos y precios.</p> <p>Esta capa NO contiene l\u00f3gica de negocio; solo SQL y transformaciones m\u00ednimas a tipos dict / list.</p>"},{"location":"api/repository/#repository.producto_repo.actualizar","title":"<code>actualizar(id_prod, precio, stock)</code>","text":"<p>Actualiza precio y stock de un producto existente.</p>"},{"location":"api/repository/#repository.producto_repo.crear","title":"<code>crear(nombre, precio, stock)</code>","text":"<p>Crea un nuevo producto con su precio inicial.</p>"},{"location":"api/repository/#repository.producto_repo.descontar_stock","title":"<code>descontar_stock(id_prod, cantidad)</code>","text":"<p>Resta cantidad al stock del producto indicado.</p>"},{"location":"api/repository/#repository.producto_repo.eliminar","title":"<code>eliminar(id_prod)</code>","text":"<p>Elimina un producto (y su precio) de la BD.</p>"},{"location":"api/repository/#repository.producto_repo.exportar_excel","title":"<code>exportar_excel()</code>","text":"<p>Exporta el inventario a data/inventario_exportado.xlsx.</p> <p>Returns:</p> Type Description <code>str</code> <p>Ruta absoluta del archivo generado.</p>"},{"location":"api/repository/#repository.producto_repo.listar","title":"<code>listar(*, stock_bajo=False, sin_precio=False)</code>","text":"<p>Devuelve los productos filtrados.</p> <p>Parameters:</p> Name Type Description Default <code>stock_bajo</code> <code>bool</code> <p>Solo productos con stock \u2264 30.</p> <code>False</code> <code>sin_precio</code> <code>bool</code> <p>Solo productos sin precio asignado.</p> <code>False</code> <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>Lista de dicts con <code>id</code>, <code>nombre</code>, <code>precio</code> y <code>stock</code>.</p>"},{"location":"api/repository/#repository.producto_repo.obtener_precio","title":"<code>obtener_precio(id_prod)</code>","text":"<p>Devuelve el precio neto de un producto (o 0 si no existe).</p>"},{"location":"api/repository/#repository.producto_repo.obtener_productos","title":"<code>obtener_productos()</code>","text":"<p>Lista id, nombre y stock de todos los productos.</p>"},{"location":"api/repository/#repository.producto_repo.obtener_stock","title":"<code>obtener_stock(id_prod)</code>","text":"<p>Devuelve el stock disponible de un producto.</p>"},{"location":"api/repository/#repositoryventas_repo","title":"repository.ventas_repo","text":"<p>Operaciones CRUD y consultas sobre Ventas y su detalle (<code>ventas_producto</code>).</p> <p>Operaciones CRUD y reportes de ventas.</p>"},{"location":"api/repository/#repository.ventas_repo.detalle","title":"<code>detalle(id_venta)</code>","text":"<p>Devuelve el detalle de productos vendidos en una venta.</p>"},{"location":"api/repository/#repository.ventas_repo.eliminar_venta","title":"<code>eliminar_venta(id_venta)</code>","text":"<p>Elimina una venta y restaura el stock de sus productos.</p>"},{"location":"api/repository/#repository.ventas_repo.exportar_excel","title":"<code>exportar_excel()</code>","text":"<p>Exporta la tabla de ventas a data/ventas_exportadas.xlsx.</p> <p>Returns:</p> Type Description <code>str</code> <p>Ruta absoluta del archivo generado.</p>"},{"location":"api/repository/#repository.ventas_repo.insertar_venta","title":"<code>insertar_venta(venta, items)</code>","text":"<p>Inserta cabecera y detalle de una venta.</p> <p>Parameters:</p> Name Type Description Default <code>venta</code> <code>Dict[str, Any]</code> <p>Dict con fecha, forma_pago, monto_total, total_productos.</p> required <code>items</code> <code>Sequence[Dict[str, Any]]</code> <p>Secuencia de dicts con id_producto, cantidad, monto_producto.</p> required <p>Returns:</p> Type Description <code>int</code> <p>id_venta generado.</p>"},{"location":"api/repository/#repository.ventas_repo.listar","title":"<code>listar(rango=None)</code>","text":"<p>Lista ventas opcionalmente filtradas por rango de fechas.</p> <p>Parameters:</p> Name Type Description Default <code>rango</code> <code>tuple[str, str] | None</code> <p>Tupla <code>(desde, hasta)</code> en formato YYYY-MM-DD.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>Lista de dicts con id, fecha, forma, total_prod, monto.</p>"},{"location":"api/services/","title":"Servicios","text":"<p>La capa de Services orquesta la l\u00f3gica de negocio: valida reglas (stock, totales, IVA) y delega en los repositorios.</p>"},{"location":"api/services/#servicesproducto_service","title":"services.producto_service","text":"<p>Encapsula las operaciones CRUD de productos y precio, a\u00f1adiendo validaciones simples.</p> <p>Reglas de negocio relacionadas con productos (stock y precios).</p>"},{"location":"api/services/#services.producto_service.ProductoService","title":"<code>ProductoService</code>","text":"<p>Facade sobre <code>producto_repo</code> para encapsular reglas simples de negocio.</p>"},{"location":"api/services/#services.producto_service.ProductoService.__init__","title":"<code>__init__()</code>","text":"<p>Initialize the product service.</p>"},{"location":"api/services/#services.producto_service.ProductoService.alta","title":"<code>alta(nombre, precio, stock)</code>","text":"<p>Crea un producto nuevo.</p>"},{"location":"api/services/#services.producto_service.ProductoService.baja","title":"<code>baja(id_prod)</code>","text":"<p>Elimina un producto por ID (cascada borra el precio).</p>"},{"location":"api/services/#services.producto_service.ProductoService.exportar_excel","title":"<code>exportar_excel()</code>","text":"<p>Genera un archivo Excel con el inventario.</p> <p>Returns:</p> Type Description <code>str</code> <p>Ruta absoluta del archivo creado.</p>"},{"location":"api/services/#services.producto_service.ProductoService.listar","title":"<code>listar(*, stock_bajo=False, sin_precio=False)</code>","text":"<p>Devuelve productos seg\u00fan filtros.</p> <p>Parameters:</p> Name Type Description Default <code>stock_bajo</code> <code>bool</code> <p>Solo productos con stock \u2264 30.</p> <code>False</code> <code>sin_precio</code> <code>bool</code> <p>Solo productos sin precio asignado.</p> <code>False</code> <p>Returns:</p> Type Description <code>list[dict[str, int | str]]</code> <p>Lista de diccionarios con <code>id</code>, <code>nombre</code>, <code>precio</code> y <code>stock</code>.</p>"},{"location":"api/services/#services.producto_service.ProductoService.modificar","title":"<code>modificar(id_prod, precio, stock)</code>","text":"<p>Actualiza precio y stock de un producto existente.</p>"},{"location":"api/services/#servicesventas_service","title":"services.ventas_service","text":"<p>Gestiona la creaci\u00f3n y eliminaci\u00f3n de ventas: prepara los items, aplica IVA, persiste la venta y ajusta stock.</p> <p>Reglas de negocio de ventas: creaci\u00f3n, eliminaci\u00f3n y consultas.</p>"},{"location":"api/services/#services.ventas_service.StockError","title":"<code>StockError</code>","text":"<p>               Bases: <code>Exception</code></p> <p>Se lanza si la cantidad solicitada supera el stock disponible.</p>"},{"location":"api/services/#services.ventas_service.VentasService","title":"<code>VentasService</code>","text":"<p>Orquesta las operaciones de venta y delega en los repositorios.</p>"},{"location":"api/services/#services.ventas_service.VentasService.__init__","title":"<code>__init__()</code>","text":"<p>Initialize the ventas service.</p>"},{"location":"api/services/#services.ventas_service.VentasService.crear_venta","title":"<code>crear_venta(*, fecha, forma_pago, items)</code>","text":"<p>Create a sale record and deduct stock.</p> <p>Parameters:</p> Name Type Description Default <code>fecha</code> <code>str</code> <p><code>YYYY-MM-DD</code>.</p> required <code>forma_pago</code> <code>str</code> <p>cadena libre (\"efectivo\", \"tarjeta\", etc.).</p> required <code>items</code> <code>Sequence[Dict]</code> <p>Secuencia de dicts devueltos por <code>preparar_items_venta</code>.</p> required <p>Returns:</p> Type Description <code>int</code> <p>id_venta generado.</p>"},{"location":"api/services/#services.ventas_service.VentasService.eliminar_venta","title":"<code>eliminar_venta(id_venta)</code>","text":"<p>Elimina una venta y restaura el stock asociado.</p>"},{"location":"api/services/#services.ventas_service.VentasService.exportar_ventas_excel","title":"<code>exportar_ventas_excel()</code>","text":"<p>Exporta las ventas a Excel y devuelve la ruta del archivo.</p>"},{"location":"api/services/#services.ventas_service.VentasService.obtener_ventas","title":"<code>obtener_ventas(rango=None)</code>","text":"<p>Lista ventas (opcionalmente acotadas por fechas).</p>"},{"location":"api/services/#services.ventas_service.VentasService.preparar_items_venta","title":"<code>preparar_items_venta(cantidades)</code>","text":"<p>Convierte los datos del formulario en \u00edtems listos para persistir.</p> <p>Parameters:</p> Name Type Description Default <code>cantidades</code> <code>Dict</code> <p>Dict cuyas claves son <code>id_producto</code> y cuyo valor es otro dict con keys: <code>var</code> (StringVar), <code>nombre</code> y <code>stock</code>.</p> required <p>Returns:</p> Type Description <code>list[Dict]</code> <p>Lista de diccionarios con id_producto, nombre, cantidad y</p> <code>list[Dict]</code> <p>monto_producto (IVA incluido).</p> <p>Raises:</p> Type Description <code>StockError</code> <p>Si se intenta vender m\u00e1s unidades de las disponibles.</p>"},{"location":"api/services/#services.ventas_service.VentasService.ver_detalle_venta","title":"<code>ver_detalle_venta(id_venta)</code>","text":"<p>Devuelve el detalle de productos vendidos en una venta.</p>"},{"location":"api/ui/","title":"Capa UI","text":"<p>Esta secci\u00f3n documenta la interfaz de usuario construida con Tkinter. Aqu\u00ed encontrar\u00e1s las clases principales que componen la ventana y sus pesta\u00f1as, as\u00ed como las utilidades de UI.</p>"},{"location":"api/ui/#uimain_window","title":"ui.main_window","text":"<p>Gestor de la ventana principal y las pesta\u00f1as de la aplicaci\u00f3n.</p> <p>Ventana principal de la aplicaci\u00f3n Matex (capa UI).</p>"},{"location":"api/ui/#ui.main_window.MainWindow","title":"<code>MainWindow</code>","text":"<p>               Bases: <code>Tk</code></p> <p>Contenedor ra\u00edz con todas las pesta\u00f1as.</p>"},{"location":"api/ui/#ui.main_window.MainWindow.__init__","title":"<code>__init__()</code>","text":"<p>Inicializa la ventana y construye los widgets.</p>"},{"location":"api/ui/#uiui_utils","title":"ui.ui_utils","text":"<p>Funciones auxiliares para limpiar frames y mostrar popups de error/\u00e9xito.</p> <p>Peque\u00f1as utilidades de interfaz basadas en Tkinter.</p>"},{"location":"api/ui/#ui.ui_utils.clear_frame","title":"<code>clear_frame(frame)</code>","text":"<p>Destruye todos los widgets hijos de frame.</p>"},{"location":"api/ui/#ui.ui_utils.popup_error","title":"<code>popup_error(msg, title='Error')</code>","text":"<p>Muestra un di\u00e1logo de error est\u00e1ndar.</p>"},{"location":"api/ui/#ui.ui_utils.popup_success","title":"<code>popup_success(msg, title='\u00c9xito')</code>","text":"<p>Muestra un di\u00e1logo de informaci\u00f3n con estilo \u201c\u00e9xito\u201d.</p>"},{"location":"api/ui/#uiventaseliminar_tab","title":"ui.ventas.eliminar_tab","text":"<p>Pesta\u00f1a para eliminar ventas por ID y restaurar stock.</p> <p>Pesta\u00f1a para eliminar ventas y restaurar stock.</p>"},{"location":"api/ui/#ui.ventas.eliminar_tab.EliminarTab","title":"<code>EliminarTab</code>","text":"<p>               Bases: <code>Frame</code></p> <p>Frame Tkinter que permite eliminar una venta por ID.</p>"},{"location":"api/ui/#ui.ventas.eliminar_tab.EliminarTab.__init__","title":"<code>__init__(parent)</code>","text":"<p>Initialize the eliminar tab.</p>"},{"location":"api/ui/#uiventashistorial_tab","title":"ui.ventas.historial_tab","text":"<p>Pesta\u00f1a de historial de ventas con filtro por fechas y exportaci\u00f3n a Excel.</p> <p>Pesta\u00f1a que muestra el historial de ventas con filtros y exportaci\u00f3n.</p>"},{"location":"api/ui/#ui.ventas.historial_tab.HistorialTab","title":"<code>HistorialTab</code>","text":"<p>               Bases: <code>Frame</code></p> <p>Frame con tabla de ventas y filtros por rango de fechas.</p>"},{"location":"api/ui/#ui.ventas.historial_tab.HistorialTab.__init__","title":"<code>__init__(parent)</code>","text":"<p>Initialize the historial tab.</p>"},{"location":"api/ui/#uiventasingreso_tab","title":"ui.ventas.ingreso_tab","text":"<p>Pesta\u00f1a de ingreso de ventas: selecci\u00f3n de productos, c\u00e1lculo de totales e IVA.</p> <p>Pesta\u00f1a para registrar una nueva venta.</p>"},{"location":"api/ui/#ui.ventas.ingreso_tab.IngresoTab","title":"<code>IngresoTab</code>","text":"<p>               Bases: <code>Frame</code></p> <p>Formulario de venta con listado de productos y c\u00e1lculo de totales.</p>"},{"location":"api/ui/#ui.ventas.ingreso_tab.IngresoTab.__init__","title":"<code>__init__(parent)</code>","text":"<p>Initialize the ingreso tab.</p>"},{"location":"api/ui/#uiventasinventario_tab","title":"ui.ventas.inventario_tab","text":"<p>Pesta\u00f1a de control de inventario: filtros, CRUD de productos y exportaci\u00f3n.</p> <p>Pesta\u00f1a para visualizar y gestionar el inventario.</p>"},{"location":"api/ui/#ui.ventas.inventario_tab.InventarioTab","title":"<code>InventarioTab</code>","text":"<p>               Bases: <code>Frame</code></p> <p>Frame con tabla de productos, filtros y acciones CRUD.</p>"},{"location":"api/ui/#ui.ventas.inventario_tab.InventarioTab.__init__","title":"<code>__init__(parent)</code>","text":"<p>Initialize the inventario tab.</p>"}]}